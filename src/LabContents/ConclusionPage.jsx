import { useParams } from 'react-router-dom';

function ConclusionPage() {
    const { labId } = useParams();
    const conclusions = [
        {
            id: 1,
            text: [
                "У ході виконання лабораторної роботи я ознайомилася з принципами реалізації рекурсивних алгоритмів на мові Scheme.",
                "У Задачі 4.1 було реалізовано алгоритм піднесення числа X у степінь N за допомогою рекурентного співвідношення на основі методу 'піднесення до степеня множенням навпіл' (exponentiation by squaring). Це дозволило суттєво зменшити кількість рекурсивних викликів у порівнянні з прямим множенням. Глибина рекурсії для даного методу дорівнює O(log2 N), що робить алгоритм ефективним для великих N.",
                "У Задачі 4.2 було реалізовано рекурсивний алгоритм обчислення суми цифр числа. Алгоритм працює шляхом послідовного виділення останньої цифри (операція modulo), додавання її до результату та подальшого ділення числа націло на 10 (quotient), доки число не стане рівним нулю. Робота алгоритму підтверджена контрольним прикладом: для n=179 отримано результат 17.",
                "Таким чином, під час виконання роботи я закріпила навички:",
                "• використання рекурсії для розв’язання обчислювальних задач;",
                "• застосування методу ділення задачі навпіл для оптимізації піднесення до степеня;",
                "• роботи з цілими числами та побудови рекурсивних функцій у Scheme."
            ]
        },
    ]
    const conclusion = conclusions.find(c => c.id === Number(labId));

    return (
        <>
            <div className='item-container'>
                <h2>Висновок</h2>
                {conclusion.text.map(с => (
                    <p>{с}</p>
                ))
                }
            </div>

        </>
    );
}

export default ConclusionPage